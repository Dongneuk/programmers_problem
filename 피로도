from itertools import permutations

def solution(k, dungeons):
    
    lst = list(permutations(dungeons, len(dungeons)))
    answer = 0
    for permu in lst:
        cnt = 0
        point = k
        for p in permu:
            if point >= p[0]:
                point -= p[1]
                cnt += 1
        answer = max(answer, cnt)
    
    return answer


############################################################

from itertools import permutations
answer = 0   

def solution(k, dungeons):
    
    def dfs(k, cnt, dungeons):
        global answer
        answer = max(answer, cnt)
        
        for i in range(len(dungeons)):
            if k >= dungeons[i][0] and not visited[i]:
                visited[i] = True
                dfs(k-dungeons[i][1], cnt+1, dungeons)
                visited[i] = False
        
    # dfs를 활용하여 백트래킹하기.
    visited = [False] * len(dungeons)
    dfs(k, 0, dungeons)
    
    return answer